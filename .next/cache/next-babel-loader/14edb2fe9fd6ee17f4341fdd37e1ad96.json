{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rifqi\\\\belajar-next-js\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MyLayout\";\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-unfetch';\n\nconst PostLink = props => {\n  return __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(Link, {\n    href: \"/p/[id]\",\n    as: `/p/${props.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.id)));\n};\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Batman TV Shows\"), __jsx(\"ul\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, props.shows.map(show => __jsx(\"li\", {\n  key: show.id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, __jsx(Link, {\n  href: \"/p/[id]\",\n  as: `/p/${show.id}`,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, __jsx(\"a\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, show.name))))));\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n  const data = await res.json();\n  console.log(`Show data fetched. count: ${data.length} `);\n  return {\n    shows: data.map(entry => entry.show)\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["F:/Rifqi/belajar-next-js/pages/index.js"],"names":["Layout","Link","fetch","PostLink","props","id","Index","shows","map","show","name","getInitialProps","res","data","json","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AACtB,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,EAAE,EAAG,MAAKA,KAAK,CAACC,EAAG,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACC,EAAV,CADJ,CADJ,CADR;AAQH,CATD;;AAUA,MAAMC,KAAK,GAAGF,KAAK,IACZ,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKA,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IACjB;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,SAAX;AAAqB,EAAA,EAAE,EAAG,MAAKI,IAAI,CAACJ,EAAG,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAII,IAAI,CAACC,IAAT,CADJ,CADJ,CADH,CADL,CAFJ,CADP;;AAeAJ,KAAK,CAACK,eAAN,GAAwB,kBAAkB;AACtC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BH,IAAI,CAACI,MAAO,GAArD;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAEM,IAAI,CAACL,GAAL,CAASU,KAAK,IAAIA,KAAK,CAACT,IAAxB;AADJ,GAAP;AAGH,CATD;;AAUA,eAAeH,KAAf","sourcesContent":["import Layout from \"../components/MyLayout\"\r\nimport Link from \"next/link\"\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst PostLink = props => {\r\n    return (\r\n            <li>\r\n                <Link href=\"/p/[id]\" as={`/p/${props.id}`}>\r\n                    <a>{props.id}</a>\r\n                </Link>\r\n            </li>\r\n        )\r\n\r\n}\r\nconst Index = props => (\r\n       <Layout>\r\n           <h1>Batman TV Shows</h1>\r\n           <ul>\r\n               {props.shows.map(show => (\r\n                   <li key={show.id}>\r\n                       <Link href=\"/p/[id]\" as={`/p/${show.id}`}>\r\n                           <a>{show.name}</a>\r\n                       </Link>\r\n                   </li>\r\n               ))}\r\n           </ul>\r\n       </Layout>\r\n    )\r\n\r\nIndex.getInitialProps = async function () {\r\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\r\n    const data = await res.json();\r\n\r\n    console.log(`Show data fetched. count: ${data.length} `);\r\n\r\n    return {\r\n        shows: data.map(entry => entry.show)\r\n    }\r\n}\r\nexport default Index\r\n"]},"metadata":{},"sourceType":"module"}