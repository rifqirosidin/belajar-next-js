{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rifqi\\\\belajar-next-js\\\\moviedb\\\\components\\\\MovieList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport MovieDB from '../api/MovieDB';\nimport MovieItem from './MovieItem';\n\nclass MovieList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      movies: []\n    });\n\n    _defineProperty(this, \"renderList\", () => {\n      if (!this.state.movies) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Loading\"));\n      } else {\n        return this.state.movies.map((movie, index) => {\n          __jsx(MovieItem, {\n            movies: movie,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          });\n        });\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const response = await MovieDB.get('/discover/movie'); // console.log(response.data.results)\n\n    this.setState({\n      movies: response.data.results\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Daftar Movie\"), this.renderList());\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["F:/Rifqi/belajar-next-js/moviedb/components/MovieList.js"],"names":["React","MovieDB","MovieItem","MovieList","Component","movies","state","map","movie","index","componentDidMount","response","get","setState","data","results","render","renderList"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AAAA;AAAA;;AAAA,mCAE3B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAF2B;;AAAA,wCAWtB,MAAK;AACd,UAAI,CAAC,KAAKC,KAAL,CAAWD,MAAhB,EAAwB;AACpB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ;AAMH,OAPD,MAOO;AACH,eACI,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAgB;AAClC,gBAAC,SAAD;AAAW,YAAA,MAAM,EAAED,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,SAFD,CADJ;AAMH;AACJ,KA3BkC;AAAA;;AAKnC,QAAME,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMV,OAAO,CAACW,GAAR,CAAY,iBAAZ,CAAvB,CADsB,CAGtB;;AACA,SAAKC,QAAL,CAAc;AAAER,MAAAA,MAAM,EAAEM,QAAQ,CAACG,IAAT,CAAcC;AAAxB,KAAd;AACH;;AAkBDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,KAAKC,UAAL,EAFL,CADJ;AAOH;;AApCkC;;AAuCvC,eAAed,SAAf","sourcesContent":["import React from 'react'\r\nimport MovieDB from '../api/MovieDB'\r\nimport MovieItem from './MovieItem'\r\n\r\nclass MovieList extends React.Component{\r\n\r\n    state = {\r\n        movies: []\r\n    }\r\n    async componentDidMount() {\r\n        const response = await MovieDB.get('/discover/movie')\r\n\r\n        // console.log(response.data.results)\r\n        this.setState({ movies: response.data.results })\r\n    }\r\n    renderList = () =>{\r\n        if (!this.state.movies) {\r\n            return(\r\n                <div>\r\n                    <p>Loading</p>\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n            return (\r\n                this.state.movies.map((movie, index)=>{\r\n                    <MovieItem movies={movie} />\r\n                })\r\n            )\r\n\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2>Daftar Movie</h2>\r\n                {this.renderList()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList"]},"metadata":{},"sourceType":"module"}