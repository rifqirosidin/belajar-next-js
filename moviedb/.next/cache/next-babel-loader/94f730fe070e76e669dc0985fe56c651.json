{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rifqi\\\\belajar-next-js\\\\moviedb\\\\components\\\\MovieList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport MovieDB from '../api/MovieDB';\nimport MovieItem from './MovieItem';\n\nclass MovieList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      movies: [],\n      selectedMovie: null\n    });\n\n    _defineProperty(this, \"onMovieSelect\", movie => {\n      this.setState({\n        se\n      });\n    });\n\n    _defineProperty(this, \"renderList\", () => {\n      if (!this.state.movies) {\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Loading\");\n      }\n\n      return this.state.movies.map((movie, index) => {\n        return __jsx(MovieItem, {\n          movies: movie,\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const response = await MovieDB.get('/discover/movie');\n    console.log(response.data.results);\n    this.setState({\n      movies: response.data.results\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Daftar Movie\"), __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.renderList()));\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["F:/Rifqi/belajar-next-js/moviedb/components/MovieList.js"],"names":["React","MovieDB","MovieItem","MovieList","Component","movies","selectedMovie","movie","setState","se","state","map","index","componentDidMount","response","get","console","log","data","results","render","renderList"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuC;AAAA;AAAA;;AAAA,mCAE3B;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,aAAa,EAAE;AAFX,KAF2B;;AAAA,2CAalBC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAEC,QAAAA;AAAF,OAAd;AACH,KAfkC;;AAAA,wCAgBtB,MAAK;AACd,UAAI,CAAC,KAAKC,KAAL,CAAWL,MAAhB,EAAuB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH;;AACH,aACI,KAAKK,KAAL,CAAWL,MAAX,CAAkBM,GAAlB,CAAsB,CAACJ,KAAD,EAAQK,KAAR,KAAgB;AACpC,eAEQ,MAAC,SAAD;AAAa,UAAA,MAAM,EAAEL,KAArB;AAA4B,UAAA,GAAG,EAAEK,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFR;AAOD,OARD,CADJ;AAWD,KA/BkC;AAAA;;AAMnC,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMb,OAAO,CAACc,GAAR,CAAY,iBAAZ,CAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,OAA1B;AACA,SAAKX,QAAL,CAAc;AAAEH,MAAAA,MAAM,EAAES,QAAQ,CAACI,IAAT,CAAcC;AAAxB,KAAd;AACH;;AAqBDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKC,UAAL,EADL,CAFJ,CADJ;AAUH;;AA3CkC;;AA8CvC,eAAelB,SAAf","sourcesContent":["import React from 'react'\r\nimport MovieDB from '../api/MovieDB'\r\nimport MovieItem from './MovieItem'\r\n\r\nclass MovieList extends React.Component{\r\n\r\n    state = {\r\n        movies: [],\r\n        selectedMovie: null\r\n    }\r\n    async componentDidMount() {\r\n        const response = await MovieDB.get('/discover/movie')\r\n\r\n        console.log(response.data.results)\r\n        this.setState({ movies: response.data.results })\r\n    }\r\n\r\n    onMovieSelect = (movie) => {\r\n        this.setState({ se})\r\n    }\r\n    renderList = () =>{\r\n        if (!this.state.movies){\r\n            return <div>Loading</div>\r\n        }\r\n      return (\r\n          this.state.movies.map((movie, index)=>{\r\n            return (\r\n\r\n                    <MovieItem   movies={movie} key={index} />\r\n\r\n            )\r\n\r\n\r\n          })\r\n      )\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h2>Daftar Movie</h2>\r\n                <div className=\"row\">\r\n                    {this.renderList()}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList"]},"metadata":{},"sourceType":"module"}