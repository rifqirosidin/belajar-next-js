{"ast":null,"code":"var _jsxFileName = \"F:\\\\Rifqi\\\\belajar-next-js\\\\moviedb\\\\components\\\\MovieList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport MovieDB from '../api/MovieDB';\nimport MovieItem from './MovieItem';\n\nclass MovieList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      movies: []\n    });\n  }\n\n  async componentDidMount() {\n    const response = await MovieDB.get('/discover/movie'); // console.log(response.data.results)\n\n    this.setState({\n      movies: response.data.results\n    });\n  }\n\n  renderList() {\n    if (!this.state.movies) {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Loading\"));\n    } else {\n      this.state.movies.map((movie, index) => {\n        return __jsx(MovieItem, {\n          movies: movie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Daftar Movie\"), this.renderList());\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["F:/Rifqi/belajar-next-js/moviedb/components/MovieList.js"],"names":["React","MovieDB","MovieItem","MovieList","Component","movies","componentDidMount","response","get","setState","data","results","renderList","state","map","movie","index","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AAAA;AAAA;;AAAA,mCAE5B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAF4B;AAAA;;AAMpC,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,CAAY,iBAAZ,CAAvB,CADsB,CAGtB;;AACA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAEE,QAAQ,CAACG,IAAT,CAAcC;AAAvB,KAAd;AACH;;AAEDC,EAAAA,UAAU,GAAG;AACT,QAAI,CAAC,KAAKC,KAAL,CAAWR,MAAhB,EAAwB;AACpB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CADJ;AAMH,KAPD,MAOO;AAEH,WAAKQ,KAAL,CAAWR,MAAX,CAAkBS,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,eACI,MAAC,SAAD;AAAW,UAAA,MAAM,EAAED,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH,OALD;AAQH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEK,KAAKL,UAAL,EAFL,CADJ;AAOH;;AA1CmC;;AA6CxC,eAAeT,SAAf","sourcesContent":["import React from 'react'\r\nimport MovieDB from '../api/MovieDB'\r\nimport MovieItem from './MovieItem'\r\n\r\nclass MovieList extends React.Component {\r\n\r\n    state = {\r\n        movies: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await MovieDB.get('/discover/movie')\r\n\r\n        // console.log(response.data.results)\r\n        this.setState({movies: response.data.results})\r\n    }\r\n\r\n    renderList() {\r\n        if (!this.state.movies) {\r\n            return (\r\n                <div>\r\n                    <p>Loading</p>\r\n                </div>\r\n            )\r\n\r\n        } else {\r\n\r\n            this.state.movies.map((movie, index) => {\r\n                return (\r\n                    <MovieItem movies={movie}/>\r\n                )\r\n\r\n            })\r\n\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Daftar Movie</h2>\r\n                {this.renderList()}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieList"]},"metadata":{},"sourceType":"module"}